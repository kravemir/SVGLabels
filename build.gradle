import groovy.swing.SwingBuilder

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(':tool:publishMavenPublicationToSonatypeSnapshotsRepository')) {
        String password = null

        if (System.console() == null) {
            new SwingBuilder().edt {
                dialog(modal: true,
                        title: 'Enter password',
                        alwaysOnTop: true,
                        resizable: false,
                        locationRelativeTo: null,
                        pack: true,
                        show: true
                ) {
                    vbox {
                        label(text: "Please enter key passphrase:")
                        input = passwordField()
                        button(defaultButton: true, text: 'OK', actionPerformed: {
                            password = new String(input.password)
                            dispose();
                        })
                    }
                }
            }
        } else {
            def passwordRaw = System.console().readPassword("\nPlease enter key passphrase: ")
            password = new String(passwordRaw)
        }

        rootProject.subprojects { project ->
            project.publishing.repositories.each { repo ->
                repo.credentials.password = password
            }
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    sourceCompatibility = 1.8

    group   'org.kravemir.svg.labels'
    version '0.1.0-SNAPSHOT'

    dependencies {
        compileOnly         "com.google.auto.value:auto-value-annotations:1.6"
        annotationProcessor "com.google.auto.value:auto-value:1.6"
    }

    ext {
        sonatypeUsername = project.hasProperty('sonatypeUsername') ? project.getProperty('sonatypeUsername') : ''
    }

    repositories {
        mavenCentral()
    }

    task sourceJar(type: Jar, dependsOn: classes) {
        classifier 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    tasks.withType(Jar) {
        from(rootProject.projectDir) {
            include 'LICENSE'
            into 'META-INF'
        }
    }

    publishing {
        publications {
            maven(MavenPublication) {
                artifact sourceJar
                artifact javadocJar

                pom.withXml {
                    asNode().with {
                        appendNode('packaging', 'jar')

                        // TODO: "${groupId}:${artifactId}" not working well
                        appendNode('name', "${groupId}:${artifactId}")
                        appendNode('description', 'Java SVG Labels generator')
                        appendNode('url', 'https://github.com/kravemir/svg-labels')

                        appendNode('licenses').with {
                            appendNode('license').with {
                                appendNode('name', 'Apache License, Version 2.0')
                                appendNode('url', 'https://www.apache.org/licenses/LICENSE-2.0.txt')
                            }
                        }

                        appendNode('developers').with {
                            appendNode('developer').with {
                                appendNode('name', 'Miroslav Kravec')
                                appendNode('email', 'kravec.miroslav@gmail.com')
                                appendNode('organization', null)
                            }
                        }

                        appendNode('scm').with {
                            appendNode('connection', 'scm:git:git://github.com/kravemir/svg-labels.git')
                            appendNode('developerConnection', 'scm:git:ssh://github.com:kravemir/svg-labels.git')
                            appendNode('url', 'https://github.com/kravemir/svg-labels/tree/master')
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                name "sonatypeSnapshots"
                url 'https://oss.sonatype.org/content/repositories/snapshots/'
                credentials {
                    username project.sonatypeUsername
                    password "-- not specified --"
                }
            }
        }
    }
}
